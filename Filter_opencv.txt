import cv2
import imutils

image = cv2.imread(f'imagess/img1.png')

image = imutils.resize(image , width=670)
gray= cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
filtered = cv2.GaussianBlur(gray, (5,5),0)
edged = cv2.Canny(filtered ,10, 100)

contours , _ = cv2.findContours(edged.copy(),cv2.RETR_TREE,cv2.CHAIN_APPROX_SIMPLE)
contours= sorted(contours,key=cv2.contourArea,reverse=True)

plate=False
for c in contours:
    perimeter=cv2.arcLength(c,True)
    approx=cv2.approxPolyDP(c,0.01*perimeter,True)
    if len(approx)==4:
        x,y,w,h=cv2.boundingRect(c)
        if 2.5<=(w/h)<=4.5:
            plate=True
            cv2.rectangle(image,(x,y),(x+w,y+h) ,(0,255,0),1)
            break
if not plate:
    for c in contours:
        perimeter = cv2.arcLength(c, True)
        approx = cv2.approxPolyDP(c, 0.02 * perimeter, True)
        if len(approx) >= 4.1:
            x, y, w, h = cv2.boundingRect(c)
            if 2.5 <= (w / h) <= 4.5 and 11000<= w*h <=17000:
                plate = True
                cv2.rectangle(image, (x, y), (x + w, y + h), (0, 255, 0), 2)
                break

if plate:
    cropped=image[y+5:y+h-5,x+5:x+w-5]
    cv2.imshow('plate',cropped)
    name = input("enter name for save image:")

    cv2.imwrite(f'kamali/image/{name}.png',cropped)
    cv2.imshow('image',image)
    cv2.imshow('edged',edged)
cv2.waitKey(0)